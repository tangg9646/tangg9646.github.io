<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 唐广的个人博客</title>
    <link>https://tangg9646.github.io/post/</link>
    <description>Recent content in Posts on 唐广的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Nov 2019 10:25:31 +0800</lastBuildDate>
    
	<atom:link href="https://tangg9646.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>3.玩卷积神经网络</title>
      <link>https://tangg9646.github.io/post/%E7%8E%A9%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Fri, 29 Nov 2019 10:25:31 +0800</pubDate>
      
      <guid>https://tangg9646.github.io/post/%E7%8E%A9%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</guid>
      <description> 有趣的卷积神经网络，手写数字识别，交互式的可视化网站 最近在看B站看到关于神经网络的讲解视频，up主：同济子豪兄
连接如下：三分钟走进卷积神经网络
更详细的讲解卷积神经网络的系列视频：https://www.bilibili.com/video/av77378145
视频中提到的网站为：http://www.scs.ryerson.ca/~aharley/vis/conv/
网站可视化中的神经网络架构为：
 6个卷积核的卷积层 池化层 16个卷积核的卷积层 池化层 密集连接层 密集连接层（softmax激活函数输出10个分类）  </description>
    </item>
    
    <item>
      <title>2.机器学习经典算法--代码整理</title>
      <link>https://tangg9646.github.io/post/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%BB%8F%E5%85%B8%E7%AE%97%E6%B3%95-%E4%BB%A3%E7%A0%81%E6%95%B4%E7%90%86/</link>
      <pubDate>Wed, 27 Nov 2019 19:33:29 +0800</pubDate>
      
      <guid>https://tangg9646.github.io/post/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%BB%8F%E5%85%B8%E7%AE%97%E6%B3%95-%E4%BB%A3%E7%A0%81%E6%95%B4%E7%90%86/</guid>
      <description>本文整理了入门python机器学习最基本的算法，可作为手册使用
梳理了python代码，方便快速从这个手册中构建出相应的代码应用于自己的项目中
1.KNN 分类算法 由于knn算法涉及到距离的概念，KNN 算法需要先进行归一化处理
1.1 归一化处理 scaler from sklearn.preprocessing import StandardScaler standardScaler =StandardScaler() standardScaler.fit(X_train) X_train_standard = standardScaler.transform(X_train) X_test_standard = standardScaler.transform(X_test)  归一化之后送入模型进行训练
from sklearn.neighbors import KNeighborsClassifier knn_clf = KNeighborsClassifier(n_neighbors=8) knn_classifier.fit(X_train_standard, y_train) y_predict = knn_clf.predict(X_test_standard) # 默认的预测指标为分类准确度 knn_clf.score(X_test, y_test)  1.2 网格搜索 GridSearchCV 使用网格搜索来确定KNN算法合适的超参数
from sklearn.model_selection import GridSearchCV param_grid = [ { &#39;weights&#39;:[&#39;uniform&#39;], &#39;n_neighbors&#39;:[ i for i in range(1, 11)] }, { &#39;weights&#39;:[&#39;distance&#39;], &#39;n_neighbors&#39;:[i for i in range(1, 11)], &#39;p&#39;:[p for p in range(1, 6)] } ] grid_search = GridSearchCV(knn_clf, param_grid, n_jobs=-1, verbose=2) grid_search.</description>
    </item>
    
    <item>
      <title>1.搭建hugo个人博客</title>
      <link>https://tangg9646.github.io/post/%E6%90%AD%E5%BB%BAhugo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Wed, 27 Nov 2019 17:58:59 +0800</pubDate>
      
      <guid>https://tangg9646.github.io/post/%E6%90%AD%E5%BB%BAhugo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>本内容整理于哔哩哔哩up主，CodeSheep
连接如下：手把手教你从0开始搭建自己的个人博客 |第二种姿势 | hugo
分享给想要搭建个人博客的朋友。
1. 常用框架 hexo 静态的 js 博客
jekyllrb 静态
hugo 基于go语言
官网：gohugo.org
vuepress 网址：vuepress.vuejs.org
solo 网址：solo.org
2. hugo博客搭建 本示例是在Windows平台下搭建。
过程中出现其他问题可以查看：
https://www.gohugo.org hugo中文文档
1. 安装hugo工具  安装Windows安装管理工具 scoop
 安装完scoop之后，直接运行命名
scoop install hugo下载博客主题  注意观察hugo的安装目录
  需要已经下载安装好Git到自己的电脑上
并且已经申请注册了github账号，可以创建自己的仓库
推荐把git版本管理工具的基本操作学习一下：廖雪峰Git教程
2. 在本地创建博客目录 使用Hugo快速生成站点，比如希望生成到 C:/Uesr/TG 路径：
hugo new sie C:/User/TG/tgblog  执行完命名后即可在对应目录下找到该文件夹
3. 下载hugo主题 网址为： huogo-themes
使用命令行进入创建的tgbolg文件夹
cd C:/User/TG/tgblog  将选定好的主题，通过git命名下载到theme文件夹
git clone https://github.com/vaga/hugo-theme-m10c.git themes/m10c  4.</description>
    </item>
    
  </channel>
</rss>